	ORG 8000H
	DATAOUT EQU 0FFF0H
	DATAIN	EQU 0FFF1H
	SEVENSEG EQU 0FFC0H
	DIGITMEM EQU 20H

; INITIALIZE THE 7 SEGMENT DISPLAY CODES IN MEMORY

	MOV R0, #DIGITMEM
	MOV A, #0C0h ; 0
	MOV @R0, A
	INC R0
	MOV A, #0F9h ; 1
	MOV @R0, A
	INC R0
 	MOV A, #0A4h ; 2
	MOV @R0, A
	INC R0
	MOV A, #0B0h ; 3 
	MOV @R0, A
	INC R0
	MOV A, #99h ; 4 
	MOV @R0, A
	INC R0
	MOV A, #92h ; 5
	MOV @R0, A
	INC R0
	MOV A, #82h ; 6
	MOV @R0, A
	INC R0
	MOV A, #0D8h ; 7 
	MOV @R0, A
	INC R0
	MOV A, #80h ; 8
	MOV @R0, A
	INC R0
	MOV A, #90h ; 9
	MOV @R0, A
	INC R0

;INITIALIZE DATAOUT TO READ THE FIRST COLUMN OF THE KEYPAD

START:
	MOV R1, #0
	MOV DPTR, #DATAOUT
	MOV A, #11101111b
	MOVX @DPTR, A

; MAIN LOOP
LOOP:
	CALL DISPLAY
	CALL DELAY
	CALL KEYSCAN
	CALL INCDEC
	JMP LOOP
; END OF THE MAIN LOOP

; DISPLAY THE NUMBER ON THE 7 SEG
DISPLAY:
	MOV A, #DIGITMEM
	ADD A, R1
	MOV R0, A
	MOV A, @R0
	MOV DPTR, #SEVENSEG
	MOVX @DPTR, A
	RET

KEYSCAN:
	MOV DPTR, #DATAIN
	MOVX A, @DPTR
	ORL A, #11100000b
	XRL A, #11111111b
	MOV R2, A
	RET

; INCREMENT OR DECREMENT THE COUNTER INCDEC
INCDEC:
; IF 0 PRESSED, DECREMENT COUNTER BY 2
TEST0:
	MOV A, R2
	CJNE A, #00010000b TEST4
	MOV A, R1
	ADD A, #8 ; +10 - 2
	MOV R1, A
	JMP MOD10

; IF 4 PRESSED, DECREMENT COUNTER BY 1
TEST4:
	MOV A, R2
	CJNE A, #00001000b TEST04
	MOV A, R1
	ADD A, #9 ; +10 - 1
	MOV R1, A
	JMP MOD10AH

; IF 0 and 4 PRESSED, DECREMENT COUNTER BY 3
TEST04:
	MOV A, R2
	CJNE A, #00011000b TEST8
	MOV A, R1
	ADD A, #7 ; +10 - 3
	MOV R1, A
	JMP MOD10

; IF 8 PRESSED, DECREMENT COUNTER BY 1
TEST8:
	MOV A, R2
	CJNE A, #00000100b TESTC
	MOV A, R1
	ADD A, #1
	MOV R1, A
	JMP MOD10

; IF C PRESSED, DECREMENT COUNTER BY 2
TESTC:
	MOV A, R2
	CJNE A, #00000010b TESTC8
	MOV A, R1
	ADD A, #2
	MOV R1, A
	JMP MOD10

; IF C AND 8 PRESSED, DECREMENT COUNTER BY 3
TESTC8:
	MOV A, R2
	CJNE A, #00000110b MOD10
	MOV A, R1
	ADD A, #3 ; 1 + 2
	MOV R1, A
	JMP MOD10

; IF R1 >= 10 THEN R1 = R1 % 10
; IF R1 < 10 THEN R1 IS UNCHANGED
MOD10:
	MOV A, R1
	MOV B, #10
	DIV AB
	MOV R1, B
	RET

;DELAY FUNCTION
DELAY:	
	MOV R5, #7h
DELAY1:
	MOV R6, #0FFh
DELAY2:
	MOV R7, #0FFh
DELAY3:
	DJNZ R7, DELAY3
	DJNZ R6, DELAY2
	DJNZ R5, DELAY1
	RET
END